/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.views;

import com.mycompany.ilib.DAOUserImpl;
import com.mycompany.ilib.Dashboard;
import com.mycompany.interfaces.DAOUsers;
import java.awt.BorderLayout;
import java.awt.Color;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author SOFIPIU19
 */
public class Users extends javax.swing.JPanel {

    /**
     * Creates new form Principal
     */
    public Users() {
        initComponents();
        InitStyles();
        LoadUsers();
    }
    
    private void InitStyles(){
        tittle.putClientProperty( "FlatLaf.style", "font: bold $h3.regular.font" );
        tittle.setForeground(Color.black);
        userSearch.putClientProperty("JTextField.placeholderText", "Ingrese nombre de usuario a buscar");
    }
    
    private void LoadUsers(){
        try{
            DAOUsers dao = new DAOUserImpl(); //Instancia de interface DAOUsers
            //Se guarda el listado de usuarios de la base de datos
            //List<com.mycompany.models.Users> lista = dao.listar();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            dao.listar("").forEach((u) -> model.addRow(new Object[]{u.getId(),u.getName(),u.getLast_name_p(),u.getLast_name_m(),u.getDomicilio(),u.getTel()})); //Imprime cada elemento de la lista en consola
        } catch(Exception e){
            System.out.println(e.getMessage());
        }
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        background = new javax.swing.JPanel();
        borrarBtn = new javax.swing.JButton();
        tittle = new javax.swing.JLabel();
        userSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        buscarBtn = new javax.swing.JButton();
        nuevoBtn = new javax.swing.JButton();
        editarBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(750, 430));

        background.setBackground(new java.awt.Color(255, 255, 255));
        background.setPreferredSize(new java.awt.Dimension(750, 430));
        background.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        borrarBtn.setBackground(new java.awt.Color(188, 64, 64));
        borrarBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        borrarBtn.setForeground(new java.awt.Color(255, 255, 255));
        borrarBtn.setText("Borrar");
        borrarBtn.setBorderPainted(false);
        borrarBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        borrarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarBtnActionPerformed(evt);
            }
        });
        background.add(borrarBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 340, 90, 50));

        tittle.setText("Usuarios");
        background.add(tittle, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, -1));

        userSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userSearchActionPerformed(evt);
            }
        });
        background.add(userSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 540, 50));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Apellido P.", "Apellido M.", "Domicilio", "Telefono"
            }
        ));
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.setGridColor(new java.awt.Color(153, 153, 153));
        jTable1.setShowGrid(true);
        jScrollPane1.setViewportView(jTable1);

        background.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 690, 220));

        buscarBtn.setBackground(new java.awt.Color(188, 64, 64));
        buscarBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        buscarBtn.setForeground(new java.awt.Color(255, 255, 255));
        buscarBtn.setText("Buscar");
        buscarBtn.setBorderPainted(false);
        buscarBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buscarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarBtnActionPerformed(evt);
            }
        });
        background.add(buscarBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 40, 130, 50));

        nuevoBtn.setBackground(new java.awt.Color(188, 64, 64));
        nuevoBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        nuevoBtn.setForeground(new java.awt.Color(255, 255, 255));
        nuevoBtn.setText("Nuevo");
        nuevoBtn.setBorderPainted(false);
        nuevoBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nuevoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoBtnActionPerformed(evt);
            }
        });
        background.add(nuevoBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 340, 90, 50));

        editarBtn.setBackground(new java.awt.Color(188, 64, 64));
        editarBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        editarBtn.setForeground(new java.awt.Color(255, 255, 255));
        editarBtn.setText("Editar");
        editarBtn.setBorderPainted(false);
        editarBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarBtnActionPerformed(evt);
            }
        });
        background.add(editarBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 340, 90, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void borrarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarBtnActionPerformed
        // TODO add your handling code here:
       
        DAOUsers dao = new DAOUserImpl(); //Instancia de interface DAOUsers
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel(); //Objeto para manipular tabla
        if(jTable1.getSelectedRows().length<1){//Si no esta seleccionado ninguna fila
            javax.swing.JOptionPane.showMessageDialog(this, "Debe seleccionar el usuario a eliminar \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
        }else{//Eliminar seleccionado
            //Se busca el número de id a eliminar 0 a ...X
            for (int i : jTable1.getSelectedRows()) {
                try {
                    dao.eliminar((int) jTable1.getValueAt(i, 0)); //Se envia el Id de usuario
                    model.removeRow(i);//Se va eliminar de la parte visual de la tabla
                } catch (Exception e) {
                    System.out.println(e.getMessage());
                }
            } 
        }

    }//GEN-LAST:event_borrarBtnActionPerformed

    private void buscarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarBtnActionPerformed
        // TODO add your handling code here:
        try {
            String usuarioAbuscar = userSearch.getText();
//            //Validaciones para datos ingresados
//            if (usuarioAbuscar.isEmpty()) { //No es vacío
//                javax.swing.JOptionPane.showMessageDialog(this, "Debes ingresar el nombre de usuario a buscar \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
//                userSearch.requestFocus();
//                return; //No se inserta los datos
//            }
            DAOUsers dao = new DAOUserImpl(); //Instancia de interface DAOUsers
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0);//Limpia las filas
            dao.listar(usuarioAbuscar).forEach((u) -> model.addRow(new Object[]{u.getId(), u.getName(), u.getLast_name_p(), u.getLast_name_m(), u.getDomicilio(), u.getTel()})); //Imprime cada elemento de la lista en consola
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        
    }//GEN-LAST:event_buscarBtnActionPerformed

    private void nuevoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoBtnActionPerformed
        Dashboard.ShowJPanel(new UpUsers());
    }//GEN-LAST:event_nuevoBtnActionPerformed

    private void editarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarBtnActionPerformed
        // TODO add your handling code here:
//        System.out.println(jTable1.getSelectedRow());//Verificar que indice se selecciona
        if (jTable1.getSelectedRow() > -1) {
            try {
                int userId = (int) jTable1.getValueAt(jTable1.getSelectedRow(), 0);
                DAOUsers dao = new DAOUserImpl(); //Instancia de interface DAOUsers
                Dashboard.ShowJPanel(new UpUsers(dao.getUserById(userId)));
            } catch (Exception e) {
                System.out.println(e.getMessage());
            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Debe seleccionar el usuario a editar \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_editarBtnActionPerformed

    private void userSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel background;
    private javax.swing.JButton borrarBtn;
    private javax.swing.JButton buscarBtn;
    private javax.swing.JButton editarBtn;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton nuevoBtn;
    private javax.swing.JLabel tittle;
    private javax.swing.JTextField userSearch;
    // End of variables declaration//GEN-END:variables
}
